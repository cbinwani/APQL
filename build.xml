<?xml version="1.0" encoding="utf-8"?>
<project name="Apromore - Eclipse Virgo Deployment" default="deploy-virgo">

    <description>
        Supports deployment of Apromore to Eclipse Virgo.
    </description>

    <!-- Per-site properties (network address, directories to use, etc) -->
    <property file="site.properties"/>

    <!-- Change this property to select a different database plugin for Deployment!
         You also need to make sure that the correct JDBC Driver JAR (compatible with OSGi) is available. -->
    <property name="database-name" value="mysql"/>

    <!-- Folders used to build and deploy dependencies for Apromore. -->
    <property name="dir-sups" location="${basedir}/Supplements"/>
    <property name="dir-sups-lib" location="${dir-sups}/libraries"/>
    <property name="dir-extras" location="${basedir}/Apromore-Extras"/>
    <property name="dir-extras-build-tools" location="${dir-extras}/Build-Tools"/>
    <property name="dir-extras-test-tools" location="${dir-extras}/Test-Tools"/>

    <!--  URL of the automatically downloaded and installed Eclipse Virgo -->
    <property name="virgo-url" value="http://apromore.googlecode.com/svn/dev/software/virgo-tomcat-server-3.6.2.RELEASE.zip"/>
    <property name="dir-deployment" location="${basedir}/Apromore-Assembly"/>
    <property name="dir-virgo" location="${dir-deployment}/virgo-tomcat-server-3.6.2.RELEASE"/>

    <!-- Locations of all the plugins. as they should be separate to the Web App PAR. -->
    <property name="dir-plugins" location="${basedir}/Apromore-Plugins/"/>
    <property name="dir-annotation" location="${basedir}/Apromore-Plugins/plugin-annotation/"/>
    <property name="dir-canoniser" location="${basedir}/Apromore-Plugins/plugin-canoniser/"/>
    <property name="dir-deploy" location="${basedir}/Apromore-Plugins/plugin-deployment/"/>
    <property name="dir-metric" location="${basedir}/Apromore-Plugins/plugin-toolbox/plugin-metric/"/>

    <fileset id="pickupRepo" dir=".">
        <include name="Apromore-Assembly/**/*.plan"/>
    </fileset>

    <fileset id="usrRepo" dir=".">
        <include name="Apromore-Assembly/**/repository/usr/*.jar"/>
        <include name="Apromore-Assembly/**/repository/usr/*.war"/>
    </fileset>

    <fileset id="webAppRepo" dir=".">
        <include name="Apromore-Editor/target/*.war"/>
    </fileset>




    <!-- Project Setup -->
    <target name="apromore-pre-build" depends="apromore-load-libs, apromore-build-tools, apromore-site-config"/>

    <target name="apromore-load-libs">
        <!-- Load the Libraries that aren't found in the Maven Central Repo or any other -->
        <exec dir="${dir-sups-lib}/" executable="cmd" osfamily="windows">
            <arg value="/c"/>
            <arg value="upload.bat"/>
        </exec>
        <exec dir="${dir-sups-lib}" executable="./upload.sh" osfamily="unix" />
    </target>

    <target name="apromore-build-tools">
        <!-- Build the tools required for the main Apromore product. -->
        <exec dir="${dir-extras-build-tools}" executable="mvn.bat" osfamily="windows">
            <arg value="clean"/>
            <arg value="install"/>
        </exec>
        <exec dir="${dir-extras-test-tools}" executable="mvn.bat" osfamily="windows">
            <arg value="clean"/>
            <arg value="install"/>
        </exec>
        <exec dir="${dir-extras-build-tools}" executable="mvn" osfamily="unix">
            <arg value="clean"/>
            <arg value="install"/>
        </exec>
        <exec dir="${dir-extras-test-tools}" executable="mvn" osfamily="unix">
            <arg value="clean"/>
            <arg value="install"/>
        </exec>
    </target>

    <target name="apromore-site-config">
        <!-- Substitute fields from site.properties into lower level configuration files -->
        <copy file="Apromore-FileStore/src/main/webapp/WEB-INF/web.xml_template"
            tofile="Apromore-FileStore/src/main/webapp/WEB-INF/web.xml"
            overwrite="true">
            <filterset>
                <filter token="FILESTORE" value="${filestore.dir}"/>
            </filterset>
        </copy>
        <copy file="Apromore-Clients/manager-client/src/main/resources/apromore-client.properties_template"
            tofile="Apromore-Clients/manager-client/src/main/resources/apromore-client.properties"
            overwrite="true">
            <filterset>
                <filter token="SITE_HOST" value="${site.host}"/>
                <filter token="SITE_PORT" value="${site.port}"/>
                <filter token="SITE_EXTERNALPORT" value="${site.externalport}"/>
            </filterset>
        </copy>
        <copy file="Apromore-Clients/filestore-client/src/main/resources/apromore-client.properties_template"
              tofile="Apromore-Clients/filestore-client/src/main/resources/apromore-client.properties"
              overwrite="true">
            <filterset>
                <filter token="SITE_HOST" value="${site.host}"/>
                <filter token="SITE_PORT" value="${site.port}"/>
                <filter token="SITE_EXTERNALPORT" value="${site.externalport}"/>
                <filter token="FILESTORE" value="${filestore.dir}"/>
            </filterset>
        </copy>
        <copy file="Apromore-Clients/portal-client/src/main/resources/apromore-client.properties_template"
              tofile="Apromore-Clients/portal-client/src/main/resources/apromore-client.properties"
              overwrite="true">
            <filterset>
                <filter token="SITE_HOST" value="${site.host}"/>
                <filter token="SITE_PORT" value="${site.port}"/>
                <filter token="SITE_EXTERNALPORT" value="${site.externalport}"/>
            </filterset>
        </copy>
        <copy file="Apromore-Manager/src/main/resources/apromore.properties_template"
            tofile="Apromore-Manager/src/main/resources/apromore.properties"
            overwrite="true">
            <filterset>
                <filter token="SITE_HOST" value="${site.host}"/>
                <filter token="SITE_PORT" value="${site.port}"/>
                <filter token="LOLA_DIR" value="${lola.dir}"/>
                <filter token="MYSQL_URL" value="${mysql.url}"/>
                <filter token="MYSQL_USER" value="${mysql.user}"/>
                <filter token="MYSQL_PASSWORD" value="${mysql.password}"/>
                <filter token="PG_HOST" value="${pg.host}"/>
                <filter token="PG_NAME" value="${pg.name}"/>
                <filter token="PG_USER" value="${pg.user}"/>
                <filter token="PG_PASSWORD" value="${pg.password}"/>
            </filterset>
        </copy>
        <copy file="Apromore-Portal/src/main/resources/apromore.properties_template"
            tofile="Apromore-Portal/src/main/resources/apromore.properties"
            overwrite="true">
            <filterset>
                <filter token="SITE_HOST" value="${site.host}"/>
                <filter token="SITE_PORT" value="${site.port}"/>
            </filterset>
        </copy>
    </target>


    <!-- Virgo Related -->
    <target name="setup-virgo" depends="download-virgo, configure-virgo"/>

    <target name="check-virgo">
        <condition property="virgo.installed">
            <available file="${dir-virgo}" type="dir"/>
        </condition>
    </target>

    <target name="download-virgo" depends="check-virgo" unless="virgo.installed">
        <mkdir dir="${dir-deployment}"/>
        <get src="${virgo-url}" dest="${dir-deployment}/virgo.zip"/>
        <unzip src="${dir-deployment}/virgo.zip" dest="${dir-deployment}"/>
        <delete file="${dir-deployment}/virgo.zip"/>
    </target>

    <target name="configure-virgo" depends="check-virgo" if="virgo.installed">
        <copy todir="${dir-virgo}/repository/ext" overwrite="true">
            <fileset dir="Supplements/Virgo">
                <filename name="org.eclipse.virgo.web.properties"/>
            </fileset>
        </copy>
        <copy todir="${dir-virgo}/configuration" overwrite="true">
            <fileset dir="Supplements/Virgo">
                <include name="tomcat-server.xml"/>
                <include name="java6-server.profile"/>
            </fileset>
        </copy>
        <chmod file="${dir-virgo}/bin/*.sh" perm="ugo+rx" osfamily="unix"/>
    </target>

    <target name="clean-virgo" depends="check-virgo" if="virgo.installed">
        <delete includeemptydirs="true">
            <fileset dir="${dir-virgo}">
                <include name="repository/usr/*.jar"/>
            </fileset>
        </delete>
        <delete includeemptydirs="true">
            <fileset dir="${dir-virgo}">
                <include name="logs/*"/>
            </fileset>
        </delete>
        <delete includeemptydirs="true">
            <fileset dir="${dir-virgo}">
                <include name="pickup/*.jar"/>
                <include name="pickup/*.war"/>
                <include name="pickup/*.par"/>
                <include name="pickup/*.plan"/>
                <exclude name="pickup/org.eclipse.virgo.apps.repository_3.6.2.RELEASE.par"/>
                <exclude name="pickup/org.eclipse.virgo.apps.splash_3.6.2.RELEASE.jar"/>
                <exclude name="pickup/org.eclipse.virgo.management.console_3.6.2.RELEASE.jar"/>
            </fileset>
        </delete>
    </target>

    <target name="dist-virgo" depends="clean-virgo, setup-virgo, copy-virgo, deploy-virgo">
        <zip destfile="Apromore.zip" includes="${dir-virgo}/*"/>
    </target>

    <target name="deploy-virgo" depends="clean-virgo, setup-virgo, copy-virgo"/>

    <target name="set-permissions" depends="setup-virgo">
        <chmod file="${dir-virgo}/bin/*.sh" perm="ugo+rx" osfamily="unix"/>
    </target>

    <target name="clean-start-virgo" depends="set-permissions">
        <exec dir="${dir-virgo}/bin/" executable="cmd" osfamily="windows">
            <arg value="/c"/>
            <arg value="startup.bat"/>
            <arg line="-clean"/>
        </exec>
        <exec dir="${dir-virgo}/bin/" executable="./startup.sh" osfamily="unix">
            <arg line="-clean"/>
        </exec>
    </target>

    <target name="start-virgo" depends="set-permissions,copy-virgo">
        <exec dir="${dir-virgo}/bin/" executable="cmd" osfamily="windows">
            <arg value="/c"/>
            <arg value="startup.bat"/>
            <arg line="-clean"/>
        </exec>
        <exec dir="${dir-virgo}/bin/" executable="./startup.sh" osfamily="unix">
            <arg line="-clean"/>
        </exec>
    </target>

    <target name="debug-virgo" depends="set-permissions,copy-virgo">
        <exec dir="${dir-virgo}/bin/" executable="cmd" osfamily="windows">
            <arg value="/c"/>
            <arg value="startup.bat"/>
            <arg line="-clean -debug"/>
        </exec>
        <exec dir="${dir-virgo}/bin/" executable="./startup.sh" osfamily="unix">
            <arg line="-clean -debug"/>
        </exec>
    </target>

    <target name="debug" depends="set-permissions">
        <exec dir="${dir-virgo}/bin/" executable="cmd" osfamily="windows">
            <arg value="/c"/>
            <arg value="startup.bat"/>
            <arg line="-clean -debug"/>
        </exec>
        <exec dir="${dir-virgo}/bin/" executable="./startup.sh" osfamily="unix">
            <arg line="-clean -debug"/>
        </exec>
    </target>

    <target name="stop-virgo" depends="setup-virgo">
        <exec dir="${dir-virgo}/bin/" executable="cmd" osfamily="windows">
            <arg value="/c"/>
            <arg value="shutdown.bat"/>
        </exec>
        <exec dir="${dir-virgo}/bin/" executable="./shutdown.sh" osfamily="unix">
        </exec>
    </target>


    <target name="copy-virgo" depends="clean-virgo">
        <copy todir="${dir-virgo}/repository/usr" flatten="true" overwrite="true">
            <fileset refid="usrRepo"/>
        </copy>
        <copy todir="${dir-virgo}/pickup" flatten="true" overwrite="true">
            <fileset refid="webAppRepo"/>
            <fileset refid="pickupRepo"/>
        </copy>
        <copy todir="${dir-virgo}/pickup" flatten="true" overwrite="true">
            <fileset dir="${dir-annotation}">
                <include name="**/target/*.jar"/>
                <exclude name="**/target/*-sources.jar"/>
                <exclude name="**/core/**/*.jar"/>
            </fileset>
            <fileset dir="${dir-canoniser}">
                <include name="**/target/*.jar"/>
                <exclude name="**/target/*-sources.jar"/>
                <exclude name="**/core/**/*.jar"/>
            </fileset>
            <fileset dir="${dir-deploy}">
                <include name="**/target/*.jar"/>
                <exclude name="**/target/*-sources.jar"/>
                <exclude name="**/core/**/*.jar"/>
            </fileset>
            <fileset dir="${dir-metric}">
                <include name="**/target/*.jar"/>
                <exclude name="**/target/*-sources.jar"/>
                <exclude name="**/core/**/*.jar"/>
            </fileset>
        </copy>
    </target>

</project>
