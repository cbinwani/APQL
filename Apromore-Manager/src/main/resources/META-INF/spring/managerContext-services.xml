<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:sws="http://www.springframework.org/schema/web-services"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd">

    <context:component-scan base-package="org.apromore.service"/>
    <context:component-scan base-package="org.apromore.toolbox"/>
    <context:component-scan base-package="org.apromore.manager"/>

    <!-- ************************** WebServices ************************** -->

    <sws:annotation-driven />

    <sws:dynamic-wsdl id="manager" portTypeName="Manager" locationUri="/services/manager/" targetNamespace="urn:qut-edu-au:schema:apromore:manager">
        <sws:xsd location="/WEB-INF/manager.xsd"/>
    </sws:dynamic-wsdl>

    <sws:interceptors>
        <bean id="validatingInterceptor" class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"
            p:schema="/WEB-INF/manager.xsd" p:validateRequest="true" p:validateResponse="true" />
        <bean id="loggingInterceptor" class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor"/>
        <bean id="soapLoggingInterceptor" class="org.springframework.ws.soap.server.endpoint.interceptor.SoapEnvelopeLoggingInterceptor"
            p:logRequest="true" p:logResponse="true" p:logFault="true"/>
    </sws:interceptors>

    <bean id="marshallingMethodProcessor" class="org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessor"
        p:marshaller-ref="jaxb2Marshaller" p:unmarshaller-ref="jaxb2Marshaller"/>

    <bean id="defaultMethodEndpointAdapter" class="org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapter">
        <property name="methodArgumentResolvers">
            <list>
                <ref bean="marshallingMethodProcessor"/>
            </list>
        </property>
        <property name="methodReturnValueHandlers">
            <list>
                <ref bean="marshallingMethodProcessor"/>
            </list>
        </property>
    </bean>

    <bean id="jaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="schemas" value="/WEB-INF/manager.xsd" />
        <property name="contextPaths">
            <list>
                <value>org.apromore.model</value>
            </list>
        </property>
    </bean>

    <bean id="messageFactory" class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory"/>
    <bean id="messageReceiver" class="org.springframework.ws.soap.server.SoapMessageDispatcher"/>

    <bean id="lolaDir" class="org.apromore.service.impl.LolaDirImpl">
        <constructor-arg value="${lola.dir}"/>
    </bean>
    <bean id="mysqlbean" class="org.apromore.service.impl.MySqlBeanImpl">
        <constructor-arg value="${mysql.url}"/>
        <constructor-arg value="${mysql.user}"/>
        <constructor-arg value="${mysql.password}"/>
    </bean>
    <bean id="pgbean" class="org.apromore.service.impl.PGBeanImpl">
        <constructor-arg value="${pg.host}"/>
        <constructor-arg value="${pg.name}"/>
        <constructor-arg value="${pg.user}"/>
        <constructor-arg value="${pg.password}"/>
    </bean>
    <bean id="pqlbean" class="org.apromore.service.impl.PqlBeanImpl" scope="prototype"><!-- prototype means that this bean is not a singleton  -->
        <constructor-arg ref="lolaDir"/>
        <constructor-arg ref="mysqlbean"/>
        <constructor-arg ref="pgbean"/>
    </bean>


    <!-- ************************** Non WebServices ************************** -->

    <bean id="canonicalToGraph" class="org.apromore.graph.canonical.converter.CanonicalToGraph" />
    <bean id="graphToCanonical" class="org.apromore.graph.canonical.converter.GraphToCanonical" />

</beans>