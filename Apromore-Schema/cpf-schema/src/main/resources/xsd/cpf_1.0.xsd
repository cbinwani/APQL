<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright (C) 2009-2012, The AProMoRe Foundation
 
 All rights reserved. This program and the accompanying materials
 are made available under the terms of the XX license
 which accompanies this distribution, and is available at XX
 
 Contributors:
     Marcello La Rosa, Felix Mannhardt
     
     v0.1 - initial document
     v0.2 - added 'version' attribute to both this document and type 'CanonicalProcessType'
     v0.3 - added extensible 'attribute' to all super-types
     v0.4 - added process meta-data (author, creationDate...), changed type of attribute 'value' to 'anySimpleType'
     v1.0 - changed Objects to be part of a Net (Net Scope Data) instead of a CanonicalProcess,
            changed 'typeAttribute' to use xs:any as a real extension mechanism, also kept the old mechanism for backwards compability
            changed 'condition' to 'conditionExpr' as it will contain an expression
            added 'inputExpr' of type ExpressionType
            added 'outputExpr' of type ExpressionType
            added 'durationExpr' of type ExpressionType
            added 'direction' attribute with type IncomingOutgoingType to MessageEvent, 
            added 'cancelEdgeId', 'cancelNodeId' to NodeType for YAWL and BPMN
            added 'distributionSet' to ResourceTypeType for YAWL and BPMN
            added extended ResourceType taxonomy
            added 'dataTypes' to CanonicalProcessType
            added 'returnType' to ExpressionType
-->

<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:cpf="http://www.apromore.org/CPF"
    xmlns:jxb="http://java.sun.com/xml/ns/jaxb" jxb:version="1.0"
    targetNamespace="http://www.apromore.org/CPF" attributeFormDefault="unqualified"
    elementFormDefault="unqualified" version="1.0">

    <element name="CanonicalProcess" type="cpf:CanonicalProcessType">
        <unique name="nIdUn"><!-- all net ids must be different -->
            <selector xpath="./*" />
            <field xpath="@id" />
        </unique>
        <keyref name="rootRef" refer="cpf:nIdUn">
            <selector xpath="." />
            <field xpath="@rootId" />
        </keyref>
        <keyref name="subnetRef" refer="cpf:nIdUn">
            <selector xpath=".//Node" />
            <field xpath="@subnetId" />
        </keyref>
        <!-- All ids in the whole document must be different -->
        <unique name="idUn">
            <selector xpath=".//*" />
            <field xpath="@id" />
        </unique>
        <unique name="resourceTypeIdUn">
            <selector xpath="./ResourceType" />
            <field xpath="@id" />
        </unique>
        <unique name="objectIdUn">
            <selector xpath="./Net/Object" />
            <field xpath="@id" />
        </unique>
        <keyref name="resourceTypeRef" refer="cpf:resourceTypeIdUn">
            <selector xpath=".//Node/resourceTypeRef" />
            <field xpath="@resourceTypeId" />
        </keyref>
        <keyref name="objectRef" refer="cpf:objectIdUn">
            <selector xpath=".//Node/objectRef" />
            <field xpath="@objectId" />
        </keyref>
        <!-- Cancel Edges must reference Edges, Cancel Nodes must reference 
            Nodes -->
        <key name="idNode">
            <selector xpath=".//Node" />
            <field xpath="@id" />
        </key>
        <key name="idEdge">
            <selector xpath=".//Edge" />
            <field xpath="@id" />
        </key>
        <keyref name="cancelEdges" refer="cpf:idEdge">
            <selector xpath="./Node/cancelEdgeId" />
            <field xpath="@refId" />
        </keyref>
        <keyref name="cancelNodes" refer="cpf:idNode">
            <selector xpath="./Node/cancelNodeId" />
            <field xpath="@refId" />
        </keyref>
    </element>

    <complexType name="typeAttribute">
        <annotation>
            <documentation>
<![CDATA[<p>
Extension that contains language specific attributes that define the structure of a process model, but can not be expressed in terms of the canonical format.
The extension can be in form of a simple name/value pair both of type String or a pair of name/any whereas any must refer to a valid XML namespace.]]>
            </documentation>
        </annotation>
        <sequence>
            <!-- Content has to be valid XML complying to a schema -->
            <any namespace="##other" processContents="lax"
                minOccurs="0" />
        </sequence>
        <!-- Name that makes it easier to find a special extension again, 
            without unmarshalling XML. This name must be prefixed by a Canoniser specific 
            string. You can take the Canoniser package name: org.apromore.canoniser.yawl.attributeXY -->
        <attribute name="name" type="string" use="required" />
        <!-- Use this attribute if you only want to store simple Name/Value 
            pairs without using XML -->
        <attribute name="value" type="string" use="optional" />

    </complexType>

    <complexType name="CanonicalProcessType">
        <annotation>
            <documentation>
<![CDATA[			
A Canonical Process is the container for a set of Nets, ResourceTypes and Objects.
]]>
            </documentation>
        </annotation>
        <sequence>
            <element name="Net" type="cpf:NetType" minOccurs="1"
                maxOccurs="unbounded">
                <unique name="idUn2">
                    <selector xpath="./*" />
                    <field xpath="@id" />
                </unique>
                <keyref name="sourceRef" refer="cpf:idUn2">
                    <selector xpath="./Edge" />
                    <field xpath="@sourceId" />
                </keyref>
                <keyref name="targetRef" refer="cpf:idUn2">
                    <selector xpath="./Edge" />
                    <field xpath="@targetId" />
                </keyref>
                <!-- Object name should be unique in Net
                <unique name="objectNameUnInNet">
                    <selector xpath="./Object" />
                    <field xpath="name" />
                </unique>
                -->
            </element>
            <element name="ResourceType" minOccurs="0"
                maxOccurs="unbounded" type="cpf:ResourceTypeType" />
            <element name="dataTypes" type="string" minOccurs="0" />
            <element name="attribute" type="cpf:typeAttribute"
                minOccurs="0" maxOccurs="unbounded" />
        </sequence>
        <attribute name="uri" type="anyURI" use="required" />
        <attribute name="version" type="string" use="required" />
        <attribute name="name" type="string" use="required" />
        <attribute name="author" type="string" />
        <attribute name="creationDate" type="string" /> <!-- should be dateTime -->
        <attribute name="modificationDate" type="string" /> <!-- should be dateTime -->
        <attribute name="rootIds" type="cpf:IdListType" />
    </complexType>

    <complexType name="NetType">
        <annotation>
            <documentation>
<![CDATA[
A Net is a directed, attributed graph made up of Nodes {@link NodeType} and Edges {@link EdgeType}. It represents a process or a sub-process. All top processes are added to the root ids list of the Canonical Process.
{@link CanonicalProcessType#rootIds}
]]>
            </documentation>
        </annotation>
        <sequence>
            <element name="name" type="string" minOccurs="0" />
            <element name="Node" minOccurs="1" maxOccurs="unbounded"
                type="cpf:NodeType" />
            <element name="Edge" minOccurs="0" maxOccurs="unbounded"
                type="cpf:EdgeType" />
            <element name="Object" minOccurs="0" maxOccurs="unbounded"
                type="cpf:ObjectType" />
            <element name="attribute" type="cpf:typeAttribute"
                minOccurs="0" maxOccurs="unbounded" />
        </sequence>
        <attribute name="id" type="string" use="required" />
        <attribute name="originalID" type="string" use="optional" />
    </complexType>

    <complexType name="EdgeType">
        <annotation>
            <documentation>
<![CDATA[
Edge between two Nodes {@link NodeType}. An Edge can specify a condition {@link #conditionExpr} 
if it is an outgoing edge of a split {@link SplitType}. It can also be marked as default {@link #default} choice in this case. 
]]>
            </documentation>
        </annotation>
        <sequence>
            <element name="conditionExpr" type="cpf:ConditionExpressionType"
                minOccurs="0" />
            <element name="attribute" type="cpf:typeAttribute"
                minOccurs="0" maxOccurs="unbounded" />
        </sequence>
        <attribute name="id" type="string" use="required" />
        <attribute name="default" type="boolean" use="optional"
            default="false" />
        <attribute name="sourceId" type="string" use="required" />
        <attribute name="targetId" type="string" use="required" />
        <attribute name="originalID" type="string" use="optional" />
    </complexType>

    <complexType name="NodeType"> <!-- abstract="true" -->
        <annotation>
            <documentation>
<![CDATA[
Base type of all Nodes
]]>
            </documentation>
        </annotation>
        <sequence>
            <element name="name" type="string" minOccurs="0" />
            <element name="configurable" type="boolean" default="false"
                minOccurs="0" />
            <element name="attribute" type="cpf:typeAttribute"
                minOccurs="0" maxOccurs="unbounded" />
        </sequence>
        <attribute name="id" type="string" use="required" />
        <attribute name="originalID" type="string" use="optional" />
    </complexType>

    <complexType name="WorkType"> <!-- abstract="true" -->
        <annotation>
            <documentation>
<![CDATA[
Base type of all Nodes that represent some Work
]]>
            </documentation>
        </annotation>
        <complexContent>
            <extension base="cpf:NodeType">
                <sequence>
                    <element name="resourceTypeRef" type="cpf:resourceTypeRefType"
                        minOccurs="0" maxOccurs="unbounded">
                        <annotation>
                            <appinfo>
                                <jxb:property>
                                    <jxb:javadoc>Reference to a
                                        ResourceType, depending on the
                                        property {@link #teamWork} all
                                        or one of the referenced
                                        resources are needed for
                                        execution.</jxb:javadoc>
                                </jxb:property>
                            </appinfo>
                        </annotation>
                    </element>
                    <element name="objectRef" type="cpf:objectRefType"
                        minOccurs="0" maxOccurs="unbounded">
                        <annotation>
                            <appinfo>
                                <jxb:property>
                                    <jxb:javadoc>Reference to data
                                        objects of a Net.</jxb:javadoc>
                                </jxb:property>
                            </appinfo>
                        </annotation>
                    </element>
                    <element name="cancelNodeId" type="cpf:cancellationRefType"
                        minOccurs="0" maxOccurs="unbounded">
                        <annotation>
                            <appinfo>
                                <jxb:property>
                                    <jxb:javadoc>Canceling the following
                                        Nodes.</jxb:javadoc>
                                </jxb:property>
                            </appinfo>
                        </annotation>
                    </element>
                    <element name="cancelEdgeId" type="cpf:cancellationRefType"
                        minOccurs="0" maxOccurs="unbounded">
                        <annotation>
                            <appinfo>
                                <jxb:property>
                                    <jxb:javadoc>Canceling the following
                                        Edges.</jxb:javadoc>
                                </jxb:property>
                            </appinfo>
                        </annotation>
                    </element>
                    <element name="inputExpr" type="cpf:InputExpressionType"
                        minOccurs="0" maxOccurs="unbounded">
                        <annotation>
                            <appinfo>
                                <jxb:property>
                                    <jxb:javadoc>Input expressions
                                        referring to [0..*] Objects of
                                        the Net.</jxb:javadoc>
                                </jxb:property>
                            </appinfo>
                        </annotation>
                    </element>
                    <element name="outputExpr" type="cpf:OutputExpressionType"
                        minOccurs="0" maxOccurs="unbounded">
                        <annotation>
                            <appinfo>
                                <jxb:property>
                                    <jxb:javadoc>Output expressions
                                        referring to [1] Object of the
                                        Net.</jxb:javadoc>
                                </jxb:property>
                            </appinfo>
                        </annotation>
                    </element>
                    <element name="teamWork" type="boolean"
                        minOccurs="0" />
                    <element name="filterByDataExpr"
                        type="cpf:ResourceDataFilterExpressionType"
                        minOccurs="0" />
                    <element name="filterByRuntimeExpr"
                        type="cpf:ResourceRuntimeFilterExpressionType"
                        minOccurs="0" />
                    <element name="allocationStrategy" type="cpf:AllocationStrategyEnum"
                        minOccurs="0" />
                </sequence>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="resourceTypeRefType">
        <sequence>
            <element name="attribute" type="cpf:typeAttribute"
                minOccurs="0" maxOccurs="unbounded" />
        </sequence>
        <attribute name="id" type="string" />
        <attribute name="resourceTypeId" type="string" />
        <attribute name="qualifier" type="string" use="optional" />
    </complexType>

    <complexType name="objectRefType">
        <sequence>
            <element name="attribute" type="cpf:typeAttribute"
                minOccurs="0" maxOccurs="unbounded" />
        </sequence>
        <attribute name="id" type="string" />
        <attribute name="objectId" type="string" />
        <attribute name="type" type="cpf:InputOutputType" />
        <attribute name="optional" type="boolean" default="false"
            use="optional" />
        <attribute name="consumed" type="boolean" default="false"
            use="optional" />
    </complexType>

    <complexType name="cancellationRefType">
        <attribute name="refId" />
    </complexType>

    <complexType name="TaskType">
        <complexContent>
            <extension base="cpf:WorkType">
                <attribute name="subnetId" type="string" />
            </extension>
        </complexContent>
    </complexType>

    <complexType name="EventType">
        <complexContent>
            <extension base="cpf:WorkType" />
        </complexContent>
    </complexType>

    <complexType name="MessageType">
        <complexContent>
            <extension base="cpf:EventType">
                <sequence>
                    <element name="direction" type="cpf:DirectionEnum" />
                </sequence>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="TimerType">
        <annotation>
            <documentation><![CDATA[<p>Timer that captures a timeout or a delay in the process model. If the source language supports specifying formal attributes for a timer, then one of the timer attributes should be used. 
		<p>The attributes {@link #timeExpression}, {@link #timeDate}, {@link #timeDuration} are mutually exclusive.]]></documentation>
        </annotation>
        <complexContent>
            <extension base="cpf:EventType">
                <sequence>
                    <element name="timeExpression" type="cpf:TimerExpressionType"
                        minOccurs="0">
                        <annotation>
                            <appinfo>
                                <jxb:property>
                                    <jxb:javadoc>Uses the expression to
                                        query the current data of the
                                        Net (@link NetType#Object) to
                                        retrieve a dateTime or duration.
                                    </jxb:javadoc>
                                </jxb:property>
                            </appinfo>
                        </annotation>
                    </element>
                </sequence>
                <attribute name="timeDate" type="dateTime"
                    use="optional">
                    <annotation>
                        <appinfo>
                            <jxb:property>
                                <jxb:javadoc>Specify the timer event to
                                    happen at an exact date and time.
                                </jxb:javadoc>
                            </jxb:property>
                        </appinfo>
                    </annotation>
                </attribute>
                <attribute name="timeDuration" type="duration"
                    use="optional">
                    <annotation>
                        <appinfo>
                            <jxb:property>
                                <jxb:javadoc>Specify the timer event to
                                    happen after a certain amount of
                                    time.</jxb:javadoc>
                            </jxb:property>
                        </appinfo>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="RoutingType" abstract="true">
        <complexContent>
            <extension base="cpf:NodeType" />
        </complexContent>
    </complexType>

    <complexType name="SplitType">
        <complexContent>
            <extension base="cpf:RoutingType" />
        </complexContent>
    </complexType>

    <complexType name="ORSplitType">
        <complexContent>
            <extension base="cpf:SplitType" />
        </complexContent>
    </complexType>

    <complexType name="XORSplitType">
        <complexContent>
            <extension base="cpf:SplitType" />
        </complexContent>
    </complexType>

    <complexType name="ANDSplitType">
        <complexContent>
            <extension base="cpf:SplitType" />
        </complexContent>
    </complexType>

    <complexType name="StateType">
        <complexContent>
            <extension base="cpf:RoutingType" />
        </complexContent>
    </complexType>

    <complexType name="JoinType">
        <complexContent>
            <extension base="cpf:RoutingType" />
        </complexContent>
    </complexType>

    <complexType name="ORJoinType">
        <complexContent>
            <extension base="cpf:JoinType" />
        </complexContent>
    </complexType>

    <complexType name="XORJoinType">
        <complexContent>
            <extension base="cpf:JoinType" />
        </complexContent>
    </complexType>

    <complexType name="ANDJoinType">
        <complexContent>
            <extension base="cpf:JoinType" />
        </complexContent>
    </complexType>

    <complexType name="ResourceTypeType">
        <sequence>
            <element name="name" type="string" />
            <element name="configurable" type="boolean" default="false"
                minOccurs="0" />
            <element name="attribute" type="cpf:typeAttribute"
                minOccurs="0" maxOccurs="unbounded" />
        </sequence>
        <attribute name="id" type="string" use="required" />
        <attribute name="specializationIds" type="cpf:IdListType" />
        <attribute name="originalID" type="string" use="optional" />
    </complexType>

    <complexType name="HumanType">
        <complexContent>
            <extension base="cpf:ResourceTypeType">
                <sequence>
                    <element name="type" type="cpf:HumanTypeEnum"
                        minOccurs="0" />
                </sequence>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="NonhumanType">
        <complexContent>
            <extension base="cpf:ResourceTypeType">
                <sequence>
                    <element name="type" type="cpf:NonhumanTypeEnum"
                        minOccurs="0" />
                </sequence>
            </extension>
        </complexContent>
    </complexType>

    <simpleType name="HumanTypeEnum">
        <restriction base="string">
            <enumeration value="Organisation" />
            <enumeration value="Department" />
            <enumeration value="Unit" />
            <enumeration value="Team" />
            <enumeration value="Group" />
            <enumeration value="Role" />
            <enumeration value="Participant" />
        </restriction>
    </simpleType>

    <simpleType name="NonhumanTypeEnum">
        <restriction base="string">
            <enumeration value="SoftwareSystem" />
            <enumeration value="Equipment" />
        </restriction>
    </simpleType>

    <complexType name="ObjectType">
        <sequence>
            <element name="name" type="string" />
            <element name="configurable" type="boolean" default="false"
                minOccurs="0" />
            <element name="attribute" type="cpf:typeAttribute"
                minOccurs="0" maxOccurs="unbounded" />
        </sequence>
        <attribute name="id" type="string" use="required" />
        <attribute name="originalID" type="string" use="optional" />
    </complexType>

    <complexType name="HardType">
        <complexContent>
            <extension base="cpf:ObjectType" />
        </complexContent>
    </complexType>

    <complexType name="SoftType">
        <complexContent>
            <extension base="cpf:ObjectType">
                <sequence>
                    <element name="type" type="string">
                        <annotation>
                            <appinfo>
                                <jxb:property>
                                    <jxb:javadoc>Use the type system of
                                        XML Schema
                                    </jxb:javadoc>
                                </jxb:property>
                            </appinfo>
                        </annotation>
                    </element>
                </sequence>
            </extension>
        </complexContent>
    </complexType>

    <simpleType name="InputOutputType">
        <restriction base="string">
            <enumeration value="input" />
            <enumeration value="output" />
        </restriction>
    </simpleType>

    <simpleType name="IdListType">
        <list itemType="string" />
    </simpleType>

    <simpleType name="DirectionEnum">
        <restriction base="string">
            <enumeration value="incoming" />
            <enumeration value="outgoing" />
        </restriction>
    </simpleType>

    <simpleType name="AllocationStrategyEnum">
        <restriction base="string">
            <enumeration value="Random" />
            <enumeration value="RoundRobinByTime" />
            <enumeration value="RoundRobinByFrequency" />
            <enumeration value="RoundRobinByExperience" />
            <enumeration value="ShortestQueue" />
            <enumeration value="Other">
                <annotation>
                    <appinfo>
                        <jxb:property>
                            <jxb:javadoc>No pre defined allocation
                                strategy matches. Language specific
                                allocation strategy may be added to the
                                Tasks extension attributes.
                            </jxb:javadoc>
                        </jxb:property>
                    </appinfo>
                </annotation>
            </enumeration>
        </restriction>
    </simpleType>

    <complexType name="ExpressionType">
        <annotation>
            <documentation>An expression queries the data model of the
                process (i.e. Objects of the current Net) for a value.
                An expression can either be an informal expression
                specified by a natural text description ({@see
                #description})
                or a formal expression specified by both language and the expression.
                ({@see #language}, {@see #expression})
            </documentation>
        </annotation>
        <sequence>
            <element name="description" type="string" minOccurs="0" />
            <element name="language" type="anyURI" minOccurs="0">
                <annotation>
                    <appinfo>
                        <jxb:property>
                            <jxb:javadoc><![CDATA[Defines the formal language of the expression. Examples could be:
<pre>
    http://www.w3.org/1999/xpath/
    http://www.mvel.org/2.0
    http://www.w3.org/2005/xpath-functions/
</pre>]]>
                            </jxb:javadoc>
                        </jxb:property>
                    </appinfo>
                </annotation>
            </element>
            <element name="expression" type="string" minOccurs="0" />
            <element name="returnType" type="string" minOccurs="0">
                <annotation>
                    <appinfo>
                        <jxb:property>
                            <jxb:javadoc><![CDATA[Return type of the expression, either a simple XSD type or a type defined withing the 'dataTypes' schema of the CanonicalProcessFormat.]]>
                            </jxb:javadoc>
                        </jxb:property>
                    </appinfo>
                </annotation>
            </element>
        </sequence>
    </complexType>

    <complexType name="InputExpressionType">
        <complexContent>
            <extension base="cpf:ExpressionType">
                <!-- Internal Variable Name = Query(Obj1, Obj2, ..., ObjN) -->
            </extension>
        </complexContent>
    </complexType>

    <complexType name="OutputExpressionType">
        <complexContent>
            <extension base="cpf:ExpressionType">
                <!-- Net Object Name = Query(Var1, Var2, ..., VarN) -->
            </extension>
        </complexContent>
    </complexType>

    <complexType name="ConditionExpressionType">
        <complexContent>
            <extension base="cpf:ExpressionType">
                <!-- BooleanQuery(Obj1, Obj2, ..., ObjN) -->
            </extension>
        </complexContent>
    </complexType>

    <complexType name="TimerExpressionType">
        <complexContent>
            <extension base="cpf:ExpressionType">
                <!-- TimerQuery(Obj1, Obj2, ..., ObjN) -->
            </extension>
        </complexContent>
    </complexType>

    <complexType name="ResourceDataFilterExpressionType">
        <complexContent>
            <extension base="cpf:ExpressionType">
                <!-- ResourceQuery(Obj1, Obj2, ..., ObjN) -->
            </extension>
        </complexContent>
    </complexType>

    <complexType name="ResourceRuntimeFilterExpressionType">
        <complexContent>
            <extension base="cpf:ExpressionType">
                <!-- ResourceQuery(Obj1, Obj2, ..., ObjN) -->
            </extension>
        </complexContent>
    </complexType>		

</schema>
